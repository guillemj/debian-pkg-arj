#DPATCHLEVEL=1
diff -Naur arj-3.10.19.orig/arj_arcv.c arj-3.10.19/arj_arcv.c
--- arj-3.10.19.orig/arj_arcv.c	2004-02-20 14:18:52.000000000 +0100
+++ arj-3.10.19/arj_arcv.c	2004-04-06 12:54:52.000000000 +0200
@@ -1377,9 +1377,9 @@
  e=1;
  if(no_inarch)
  {
-  if(ignore_open_errors==IAE_ACCESS&&errno==EACCES||
-     ignore_open_errors==IAE_NOTFOUND&&errno==ENOENT||
-     ignore_open_errors==IAE_ALL&&(errno==EACCES||errno==ENOENT))
+  if((ignore_open_errors==IAE_ACCESS&&errno==EACCES)||
+     (ignore_open_errors==IAE_NOTFOUND&&errno==ENOENT)||
+     (ignore_open_errors==IAE_ALL&&(errno==EACCES||errno==ENOENT)))
   e=0;
  }
  if(e)
@@ -2144,9 +2144,9 @@
  }
  #if SFX_LEVEL>=ARJSFXV
   fr=file_find(name, &properties);
-  if(fr||properties.type!=ARJT_DIR&&
-         properties.type!=ARJT_BINARY&&
-         properties.type!=ARJT_UXSPECIAL)
+  if(fr||(properties.type!=ARJT_DIR&&
+          properties.type!=ARJT_BINARY&&
+          properties.type!=ARJT_UXSPECIAL))
   {
    msg_cprintf(H_ERR, M_CANTOPEN, name);
    msg_cprintf(0, (FMSG *)", ");
@@ -2358,7 +2358,7 @@
  }
  #if SFX_LEVEL>=ARJSFXV
   #if SFX_LEVEL>=ARJ
-  if(method>MAXMETHOD&&method<8||method==MAXMETHOD&&arj_nbr==1)
+  if((method>MAXMETHOD&&method<8)||(method==MAXMETHOD&&arj_nbr==1))
   #else
   if(method>3)
   #endif
@@ -2545,7 +2545,7 @@
    }
    if(test_archive_crc>=TC_CRC_AND_CONTENTS)
    {
-    if(test_archive_crc==TC_CRC_AND_CONTENTS||total_chapters==0||(unsigned int)ext_flags<=total_chapters&&(unsigned int)chapter_number>=total_chapters)
+    if(test_archive_crc==TC_CRC_AND_CONTENTS||total_chapters==0||((unsigned int)ext_flags<=total_chapters&&(unsigned int)chapter_number>=total_chapters))
     {
      if(test_archive_crc!=TC_ADDED_FILES||flist_is_in_archive(&flist_main, filename))
      {
@@ -2700,7 +2700,7 @@
   }
   if(nf_error)
    write_index_entry(idxid_fault);
-  return((pattern_found&&extm_mode==EXTM_MATCHING||!pattern_found&&extm_mode==EXTM_MISMATCHING)?2:1);
+  return(((pattern_found&&extm_mode==EXTM_MATCHING)||(!pattern_found&&extm_mode==EXTM_MISMATCHING))?2:1);
  #endif
  #if SFX_LEVEL<=ARJSFXV
   return(1);
diff -Naur arj-3.10.19.orig/arj.c arj-3.10.19/arj.c
--- arj-3.10.19.orig/arj.c	2004-01-25 02:31:52.000000000 +0100
+++ arj-3.10.19/arj.c	2004-04-06 12:54:52.000000000 +0200
@@ -227,10 +227,12 @@
  {
   tmp_swptr=swptr_hv;
   if(tmp_swptr[0]=='\0'||tmp_swptr[0]=='R'||tmp_swptr[0]=='r')
+  {
    if(!is_registered)
     exit(ARJ_ERL_WARNING);
    else if(tmp_swptr[0]!='\0')
     tmp_swptr++;
+  }
   if(tmp_swptr[0]!='\0')
   {
    msg_strcpy(strcpy_buf, M_VERSION);
diff -Naur arj-3.10.19.orig/arj_file.c arj-3.10.19/arj_file.c
--- arj-3.10.19.orig/arj_file.c	2003-10-16 01:50:28.000000000 +0200
+++ arj-3.10.19/arj_file.c	2004-04-06 12:54:52.000000000 +0200
@@ -120,6 +120,7 @@
 
  buffer=fgetc(stream);
  if(buffer==EOF)
+ {
   if(ignore_archive_errors)
   {
    #if SFX_LEVEL>=ARJSFXV
@@ -131,6 +132,7 @@
   }
   else
    error(M_CANTREAD);
+ }
  return(buffer&0xFF);
 }
 
@@ -293,6 +295,7 @@
    return(strcpy(name_format, tmp_name));
  }
  error(M_CANTOPEN, name_format);
+ return(0); /* not reached, avoid warning */
 }
 
 /* Creates an numeric extension to the name, returns -1 if failed */
@@ -1387,6 +1390,7 @@
    }
   }
  }
+ return(0);
 }
 
 /* Writes a byte to the file */
@@ -1513,6 +1517,7 @@
    cfa_store(i, FLFLAG_DELETED);
   }
  }
+ return(0);
 }
 
 #endif
diff -Naur arj-3.10.19.orig/arjsec_l.c arj-3.10.19/arjsec_l.c
--- arj-3.10.19.orig/arjsec_l.c	2002-04-08 14:07:48.000000000 +0200
+++ arj-3.10.19/arjsec_l.c	2004-04-06 12:54:52.000000000 +0200
@@ -258,7 +258,7 @@
    term=block[0]^block[1];
    term=(term>>8)^((unsigned long)get_crc32tab((term%256)^c^(unsigned char)block[2]));
    block[0]=term;
-   term2=((term>>16)<<16)+(((unsigned long)c<<8)+1)|(term%65536L);
+   term2=(((term>>16)<<16)+(((unsigned long)c<<8)+1))|(term%65536L);
    lo=(unsigned short)block[1];
    hi=(unsigned short)(block[1]>>16);
    lo2=(unsigned short)term2;
diff -Naur arj-3.10.19.orig/arjsfxjr.c arj-3.10.19/arjsfxjr.c
--- arj-3.10.19.orig/arjsfxjr.c	2004-01-25 01:40:00.000000000 +0100
+++ arj-3.10.19/arjsfxjr.c	2004-04-06 12:55:22.000000000 +0200
@@ -27,6 +27,7 @@
 
 #if TARGET==UNIX
  #include <utime.h>
+ #include <unistd.h>
 #endif
 
 DEBUGHDR(__FILE__)                      /* Debug information block */
diff -Naur arj-3.10.19.orig/arjtypes.c arj-3.10.19/arjtypes.c
--- arj-3.10.19.orig/arjtypes.c	2004-01-25 01:40:00.000000000 +0100
+++ arj-3.10.19/arjtypes.c	2004-04-06 12:54:52.000000000 +0200
@@ -14,15 +14,15 @@
 
 /* Timestamp macros */
 
-#define get_tx(m,d,h,n) (((unsigned long)m<<21)+((unsigned long)d<<16)+((unsigned long)h<<11)+(n<<5))
-#define get_tstamp(y,m,d,h,n,s) ((((unsigned long)(y-1980))<<25)+get_tx(m,d,h,n)+(s/2))
+#define get_tx(m,d,h,n) (((unsigned long)(m)<<21)+((unsigned long)(d)<<16)+((unsigned long)(h)<<11)+((n)<<5))
+#define get_tstamp(y,m,d,h,n,s) ((((unsigned long)((y)-1980))<<25)+get_tx((m),(d),(h),(n))+((s)/2))
 
-#define ts_year(ts)  ((unsigned int)((ts>>25)&0x7f)+1980)
-#define ts_month(ts) ((unsigned int)(ts>>21)&0x0f)  /* 1..12 means Jan..Dec */
-#define ts_day(ts)   ((unsigned int)(ts>>16)&0x1f)  /* 1..31 means 1st..31st */
-#define ts_hour(ts)  ((unsigned int)(ts>>11)&0x1f)
-#define ts_min(ts)   ((unsigned int)(ts>>5)&0x3f)
-#define ts_sec(ts)   ((unsigned int)((ts&0x1f)*2))
+#define ts_year(ts)  ((unsigned int)(((ts)>>25)&0x7f)+1980)
+#define ts_month(ts) ((unsigned int)((ts)>>21)&0x0f)  /* 1..12 means Jan..Dec */
+#define ts_day(ts)   ((unsigned int)((ts)>>16)&0x1f)  /* 1..31 means 1st..31st */
+#define ts_hour(ts)  ((unsigned int)((ts)>>11)&0x1f)
+#define ts_min(ts)   ((unsigned int)((ts)>>5)&0x3f)
+#define ts_sec(ts)   ((unsigned int)(((ts)&0x1f)*2))
 
 static char monthdays[12]={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
 
diff -Naur arj-3.10.19.orig/arj_user.c arj-3.10.19/arj_user.c
--- arj-3.10.19.orig/arj_user.c	2003-06-27 10:58:04.000000000 +0200
+++ arj-3.10.19/arj_user.c	2004-04-06 12:54:52.000000000 +0200
@@ -229,7 +229,7 @@
    case CENT_SKIP:
     return(' ');
    case CENT_SMART:
-    if(timetext[0]=='1'||timetext[0]=='2'&&timetext[1]=='0'&&timetext[2]<'7')
+    if(timetext[0]=='1'||(timetext[0]=='2'&&timetext[1]=='0'&&timetext[2]<'7'))
      return(' ');
     else
      return(timetext[1]);
@@ -517,10 +517,10 @@
    rc=1;
   if(file_attr_mask&TAG_NORMAL&&(file_type==ARJT_BINARY||file_type==ARJT_TEXT))
   {
-   if(file_mode.dos&FATTR_DIREC!=FATTR_DIREC&&
-      file_mode.dos&FATTR_RDONLY!=FATTR_RDONLY&&
-      file_mode.dos&FATTR_SYSTEM!=FATTR_SYSTEM&&
-      file_mode.dos&FATTR_HIDDEN!=FATTR_HIDDEN&&
+   if((file_mode.dos&FATTR_DIREC)!=FATTR_DIREC&&
+      (file_mode.dos&FATTR_RDONLY)!=FATTR_RDONLY&&
+      (file_mode.dos&FATTR_SYSTEM)!=FATTR_SYSTEM&&
+      (file_mode.dos&FATTR_HIDDEN)!=FATTR_HIDDEN&&
       file_type!=ARJT_UXSPECIAL)
     rc=1;
   }
@@ -530,7 +530,7 @@
    rc=1;
   if(file_attr_mask&TAG_SYSTEM&&file_mode.dos&FATTR_SYSTEM)
    rc=1;
-  if(file_attr_mask&TAG_ARCH&&(file_mode.dos&FATTR_ARCH!=FATTR_ARCH))
+  if(file_attr_mask&TAG_ARCH&&(file_mode.dos&FATTR_ARCH)!=FATTR_ARCH)
    return(0);
   if(file_attr_mask&TAG_NOT_ARCH&&file_mode.dos&FATTR_ARCH)
    return(0);
@@ -1797,7 +1797,7 @@
     }
     else
     {
-     if((gost_cipher!=GOST256||ext_hdr_flags!=ENCRYPT_GOST256&&ext_hdr_flags!=ENCRYPT_GOST256L)&&
+     if((gost_cipher!=GOST256||(ext_hdr_flags!=ENCRYPT_GOST256&&ext_hdr_flags!=ENCRYPT_GOST256L))&&
         (gost_cipher!=GOST40||ext_hdr_flags!=ENCRYPT_GOST40)&&
         gost_cipher!=GOST_NONE)
       error(M_WRONG_ENC_VERSION, 0);
@@ -1962,7 +1962,7 @@
    if(!win32_platform&&ansi_codepage)
     error(M_ARCHIVE_CP_MISMATCH);
    create_header(1);
-   if(cmd==ARJ_CMD_COMMENT&&!supply_comment_file||use_comment)
+   if((cmd==ARJ_CMD_COMMENT&&!supply_comment_file)||use_comment)
    {
     if(supply_comment(archive_cmt_name, archive_name))
      comment_entries++;
@@ -2002,8 +2002,8 @@
    if(garble_enabled)
    {
     encryption_version=garble_init(0);
-    if(encryption_version!=ENCRYPT_GOST256&&encryption_version!=ENCRYPT_GOST256L||
-       ext_hdr_flags!=ENCRYPT_GOST256&&ext_hdr_flags!=ENCRYPT_GOST256L)
+    if((encryption_version!=ENCRYPT_GOST256&&encryption_version!=ENCRYPT_GOST256L)||
+       (ext_hdr_flags!=ENCRYPT_GOST256&&ext_hdr_flags!=ENCRYPT_GOST256L))
     {
      if(ext_hdr_flags!=0&&encryption_version!=ext_hdr_flags)
       error(M_WRONG_ENC_VERSION, encryption_version);
diff -Naur arj-3.10.19.orig/ea_mgr.c arj-3.10.19/ea_mgr.c
--- arj-3.10.19.orig/ea_mgr.c	2003-06-27 10:58:04.000000000 +0200
+++ arj-3.10.19/ea_mgr.c	2004-04-06 12:54:52.000000000 +0200
@@ -558,6 +558,8 @@
   return(0);
  #elif TARGET==OS2||TARGET==WIN32
   return(1);                            /* ...but not always */
+ #else
+  return(0);				/* Assume "no" if we don't know */
  #endif
 }
 
diff -Naur arj-3.10.19.orig/encode.c arj-3.10.19/encode.c
--- arj-3.10.19.orig/encode.c	2003-05-03 14:18:28.000000000 +0200
+++ arj-3.10.19/encode.c	2004-04-06 12:54:52.000000000 +0200
@@ -1113,7 +1113,7 @@
    f_dicpos=(int)dicpos;
    if((r_ax=upd_tree(m))>i)
     r_ax=tc_passes=i;
-   if(n_passes<THRESHOLD||n_passes==THRESHOLD&&f_dicpos>16384||--r_ax>n_passes||r_ax==n_passes&&dicpos>>1<f_dicpos)
+   if(n_passes<THRESHOLD||(n_passes==THRESHOLD&&f_dicpos>16384)||--r_ax>n_passes||(r_ax==n_passes&&dicpos>>1<f_dicpos))
    {
     output_opt(tree[pm]);
    }
@@ -1138,7 +1138,7 @@
   f_dicpos=dicpos;
   if((r_ax=upd_tree(m))>i)
    r_ax=tc_passes=i;
-  if(n_passes<THRESHOLD||n_passes==THRESHOLD&&f_dicpos>16384||--r_ax>n_passes||r_ax==n_passes&&dicpos>>1<f_dicpos)
+  if(n_passes<THRESHOLD||(n_passes==THRESHOLD&&f_dicpos>16384)||--r_ax>n_passes||(r_ax==n_passes&&dicpos>>1<f_dicpos))
   {
    output_opt(tree[pm]);
   }
diff -Naur arj-3.10.19.orig/environ.c arj-3.10.19/environ.c
--- arj-3.10.19.orig/environ.c	2004-04-06 12:54:37.000000000 +0200
+++ arj-3.10.19/environ.c	2004-04-06 12:54:52.000000000 +0200
@@ -1989,7 +1989,7 @@
     case 'a': oflag=O_CREAT|O_APPEND; break;
     default: return(NULL);
    }
-   if(tmp_mode[1]=='+'||tmp_mode[1]!='\0'&&tmp_mode[2]=='+')
+   if(tmp_mode[1]=='+'||(tmp_mode[1]!='\0'&&tmp_mode[2]=='+'))
     oflag|=O_RDWR;
    else
     oflag|=(tmp_mode[0]=='r')?O_RDONLY:O_WRONLY;
@@ -2050,7 +2050,7 @@
      if(mode[0]=='w')
       unlink(name);
      /* Deny write activities if mixed-mode access */
-     if(mode[1]=='+'||mode[1]!='\0'&&mode[2]=='+')
+     if(mode[1]=='+'||(mode[1]!='\0'&&mode[2]=='+'))
      {
       memset(&flk, 0, sizeof(flk));
       flk.l_type=F_WRLCK;
@@ -3974,15 +3974,16 @@
  {
   #if SFX_LEVEL>=ARJ
    if(!symlink_accuracy)
-    return;
-   if(res_cnt=readlink(name, resolved_name, sizeof(resolved_name)-1)>0)
+    return(-1);
+   res_cnt=readlink(name, resolved_name, sizeof(resolved_name)-1);
+   if(res_cnt>0)
    {
     resolved_name[res_cnt]='\0';
     if(stat(name, &resolved_st)!=-1)
      protect_resolved=1;
    }
   #else
-   return;
+   return(-1);
   #endif
  }
  ut.actime=(idx==UFTREQ_ATIME)?ftime:st.st_atime;
diff -Naur arj-3.10.19.orig/fardata.c arj-3.10.19/fardata.c
--- arj-3.10.19.orig/fardata.c	2003-09-19 10:19:00.000000000 +0200
+++ arj-3.10.19/fardata.c	2004-04-06 12:54:52.000000000 +0200
@@ -20,6 +20,14 @@
 
 DEBUGHDR(__FILE__)                      /* Debug information block */
 
+#ifdef CUSTOM_PRINTF
+
+/* Forward Declaration */
+
+int vcprintf(int ccode, FMSG *fmt, va_list args);
+
+#endif
+
 #if SFX_LEVEL>=ARJ
 
 /* Checks if the error can have an error code or not */
@@ -350,7 +358,7 @@
  int need_pause, rc;
  char c;
 
- if(quiet_mode==ARJ_SILENT||quiet_mode==ARJ_QUIET&&!(ccode&H_FORCE))
+ if(quiet_mode==ARJ_SILENT||(quiet_mode==ARJ_QUIET&&!(ccode&H_FORCE)))
   return;
  CLOBBER_SENTRY();
  need_pause=(prompt_for_more&&!yes_on_all_queries&&!print_with_more);
diff -Naur arj-3.10.19.orig/gost_t.c arj-3.10.19/gost_t.c
--- arj-3.10.19.orig/gost_t.c	2002-03-27 15:03:00.000000000 +0100
+++ arj-3.10.19/gost_t.c	2004-04-06 12:54:52.000000000 +0200
@@ -7,21 +7,21 @@
 
 /* GOST source seed and pattern storage space */
 
-unsigned char seed[8][16]={0x01, 0x0F, 0x0D, 0x00, 0x05, 0x07, 0x0A, 0x04,
-                           0x09, 0x02, 0x03, 0x0E, 0x06, 0x0B, 0x08, 0x0C,
-                           0x0D, 0x0B, 0x04, 0x01, 0x03, 0x0F, 0x05, 0x09,
-                           0x00, 0x0A, 0x0E, 0x07, 0x06, 0x08, 0x02, 0x0C,
-                           0x04, 0x0B, 0x0A, 0x00, 0x07, 0x02, 0x01, 0x0D,
-                           0x03, 0x06, 0x08, 0x05, 0x09, 0x0C, 0x0F, 0x0E,
-                           0x06, 0x0C, 0x07, 0x01, 0x05, 0x0F, 0x0D, 0x08,
-                           0x04, 0x0A, 0x09, 0x0E, 0x00, 0x03, 0x0B, 0x02,
-                           0x07, 0x0D, 0x0A, 0x01, 0x00, 0x08, 0x09, 0x0F,
-                           0x0E, 0x04, 0x06, 0x0C, 0x0B, 0x02, 0x05, 0x03,
-                           0x05, 0x08, 0x01, 0x0D, 0x0A, 0x03, 0x04, 0x02,
-                           0x0E, 0x0F, 0x0C, 0x07, 0x06, 0x00, 0x09, 0x0B,
-                           0x0E, 0x0B, 0x04, 0x0C, 0x06, 0x0D, 0x0F, 0x0A,
-                           0x02, 0x03, 0x08, 0x01, 0x00, 0x07, 0x05, 0x09,
-                           0x04, 0x0A, 0x09, 0x02, 0x0D, 0x08, 0x00, 0x0E,
-                           0x06, 0x0B, 0x01, 0x0C, 0x07, 0x0F, 0x05, 0x03};
+unsigned char seed[8][16]={{0x01, 0x0F, 0x0D, 0x00, 0x05, 0x07, 0x0A, 0x04,
+                            0x09, 0x02, 0x03, 0x0E, 0x06, 0x0B, 0x08, 0x0C},
+                           {0x0D, 0x0B, 0x04, 0x01, 0x03, 0x0F, 0x05, 0x09,
+                            0x00, 0x0A, 0x0E, 0x07, 0x06, 0x08, 0x02, 0x0C},
+                           {0x04, 0x0B, 0x0A, 0x00, 0x07, 0x02, 0x01, 0x0D,
+                            0x03, 0x06, 0x08, 0x05, 0x09, 0x0C, 0x0F, 0x0E},
+                           {0x06, 0x0C, 0x07, 0x01, 0x05, 0x0F, 0x0D, 0x08,
+                            0x04, 0x0A, 0x09, 0x0E, 0x00, 0x03, 0x0B, 0x02},
+                           {0x07, 0x0D, 0x0A, 0x01, 0x00, 0x08, 0x09, 0x0F,
+                            0x0E, 0x04, 0x06, 0x0C, 0x0B, 0x02, 0x05, 0x03},
+                           {0x05, 0x08, 0x01, 0x0D, 0x0A, 0x03, 0x04, 0x02,
+                            0x0E, 0x0F, 0x0C, 0x07, 0x06, 0x00, 0x09, 0x0B},
+                           {0x0E, 0x0B, 0x04, 0x0C, 0x06, 0x0D, 0x0F, 0x0A,
+                            0x02, 0x03, 0x08, 0x01, 0x00, 0x07, 0x05, 0x09},
+                           {0x04, 0x0A, 0x09, 0x02, 0x0D, 0x08, 0x00, 0x0E,
+                            0x06, 0x0B, 0x01, 0x0C, 0x07, 0x0F, 0x05, 0x03}};
 unsigned char pattern[4][256]={0};
 
diff -Naur arj-3.10.19.orig/misc.c arj-3.10.19/misc.c
--- arj-3.10.19.orig/misc.c	2004-02-20 14:18:52.000000000 +0100
+++ arj-3.10.19/misc.c	2004-04-06 12:54:52.000000000 +0200
@@ -177,7 +177,7 @@
        wptr++;
       }
       sc=toupper(*sptr);
-      if(xpc>=xc&&sc>=xc&&sc<=xpc||sc>=xpc&&sc<=xc)
+      if((xpc>=xc&&sc>=xc&&sc<=xpc)||(sc>=xpc&&sc<=xc))
       {
        unproc=1;
        pflag=0;
@@ -186,7 +186,7 @@
      else
       pflag=0;
     }
-    if(xchar!=0&&unproc||xchar==0&&!unproc)
+    if((xchar!=0&&unproc)||(xchar==0&&!unproc))
      return(XW_UNPROC);
     if(!unproc)
      break;
diff -Naur arj-3.10.19.orig/msgbind.c arj-3.10.19/msgbind.c
--- arj-3.10.19.orig/msgbind.c	2004-01-25 01:40:00.000000000 +0100
+++ arj-3.10.19/msgbind.c	2004-04-06 12:54:52.000000000 +0200
@@ -522,13 +522,13 @@
  fprintf(ifile, "#include \"");
  for(i=0; target_h[i]!='\0'; i++)
   fputc(target_h[i]=='\\'?'/':target_h[i], ifile);
- fprintf(ifile, "\"\n\n", target_h);
+ fprintf(ifile, "\"\n\n");
  /* Ack. Now process the source file line by line... */
  while(get_msg(resfile, target, c_system, binding, locale, msg_buffer, MSG_SIZE)!=NULL)
  {
   expand_tags(msg_buffer, MSG_SIZE);
   fprintf(toupper(msgtype[0])=='N'?nfile:ffile, "char %s[]=%s;\n", msgname, msg_buffer);
-  fprintf(hfile, "extern %s %s[];\n", toupper(msgtype[0])=='N'?M_NMSG:M_FMSG, msgname, msg_buffer);
+  fprintf(hfile, "extern %s %s[];\n", toupper(msgtype[0])=='N'?M_NMSG:M_FMSG, msgname);
   /* Check if the message belongs to a pre-defined message pool */
   if(strcmp(msgpool, SKIP))
   {
diff -Naur arj-3.10.19.orig/packager.c arj-3.10.19/packager.c
--- arj-3.10.19.orig/packager.c	2003-10-16 02:32:28.000000000 +0200
+++ arj-3.10.19/packager.c	2004-04-06 12:56:18.000000000 +0200
@@ -8,6 +8,10 @@
 #include "arj.h"
 #include "arjdata.h"
 
+#if TARGET==UNIX
+#include <unistd.h>
+#endif
+
 #define P PATHSEP_DEFSTR                /* Dirty hack for compaction */
 
 #if TARGET==UNIX
@@ -202,7 +206,7 @@
  out_line(stream, "\n");
  /* Distribution area */
  #ifndef DEBUG
-  sprintf(tmp_str, "@{c40}\n",
+  sprintf(tmp_str, "@{c40}%s@{_}\n",
   #if LOCALE==LANG_en
    "*** For World-wide use and distribution ***"
   #elif LOCALE==LANG_de
diff -Naur arj-3.10.19.orig/rearj.c arj-3.10.19/rearj.c
--- arj-3.10.19.orig/rearj.c	2004-01-25 01:40:00.000000000 +0100
+++ arj-3.10.19/rearj.c	2004-04-06 12:54:52.000000000 +0200
@@ -17,6 +17,10 @@
 #include <direct.h>
 #endif
 
+#if TARGET==UNIX
+#include <unistd.h>
+#endif
+
 DEBUGHDR(__FILE__)                      /* Debug information block */
 
 /* Limits for "*.*"-alike processing */
diff -Naur arj-3.10.19.orig/uxspec.c arj-3.10.19/uxspec.c
--- arj-3.10.19.orig/uxspec.c	2003-07-15 08:35:36.000000000 +0200
+++ arj-3.10.19/uxspec.c	2004-04-06 12:54:52.000000000 +0200
@@ -10,6 +10,7 @@
 #if TARGET==UNIX
  #include <pwd.h>
  #include <grp.h>
+ #include <unistd.h>
 #endif
 
 DEBUGHDR(__FILE__)                      /* Debug information block */
@@ -167,6 +168,7 @@
     rc=mknod(name, 0644|((id==UXSB_BLK)?S_IFBLK:S_IFCHR), *(dev_t FAR *)dptr);
     return(rc?UXSPEC_RC_ERROR:0);
   }
+  return(0);
  #else
   return(UXSPEC_RC_ERROR);
  #endif
